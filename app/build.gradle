buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath group:'org.carnival', name:'carnival-gradle', version:'2.1.1-SNAPSHOT'
    }    
}

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'com.github.ManifestClasspath' version '0.1.0-RELEASE'
}

apply plugin: 'carnival.application'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:3.0.7'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.0-jre'

    implementation 'org.carnival:carnival-demo-groovy-lib:0.1-SNAPSHOT'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-M4-groovy-3.0'
    testImplementation 'junit:junit:4.13.1'
}

application {
    // Define the main class for the application.
    mainClass = 'carnival.demo.application.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

test {
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

groovydoc {
    classpath = sourceSets.main.runtimeClasspath + classpath
}